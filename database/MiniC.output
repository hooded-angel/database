State 50 conflicts: 2 shift/reduce
State 52 conflicts: 2 shift/reduce
State 53 conflicts: 2 shift/reduce
State 54 conflicts: 2 shift/reduce
State 55 conflicts: 2 shift/reduce
State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompileUnit $end

    1 CompileUnit: FuncDef
    2            | VarDecl
    3            | CompileUnit FuncDef
    4            | CompileUnit VarDecl

    5 FuncDef: BasicType T_ID T_L_PAREN T_R_PAREN Block
    6        | BasicType T_ID T_L_PAREN FormalParamList T_R_PAREN Block

    7 Block: T_L_BRACE T_R_BRACE
    8      | T_L_BRACE BlockItemList T_R_BRACE

    9 BlockItemList: BlockItem
   10              | BlockItemList BlockItem

   11 BlockItem: Statement
   12          | VarDecl

   13 VarDecl: VarDeclExpr T_SEMICOLON

   14 VarDeclExpr: BasicType VarDef
   15            | VarDeclExpr T_COMMA VarDef

   16 VarDef: T_ID T_ASSIGN Expr
   17       | T_ID
   18       | T_ID ArrayDims T_ASSIGN InitVal
   19       | T_ID ArrayDims

   20 ArrayDims: T_L_BRACKET Expr T_R_BRACKET
   21          | ArrayDims T_L_BRACKET Expr T_R_BRACKET

   22 InitVal: Expr
   23        | T_L_BRACE InitValList T_R_BRACE

   24 InitValList: InitVal
   25            | InitValList T_COMMA InitVal

   26 BasicType: T_INT
   27          | T_VOID

   28 Statement: T_RETURN Expr T_SEMICOLON
   29          | T_RETURN T_SEMICOLON
   30          | LVal T_ASSIGN Expr T_SEMICOLON
   31          | Block
   32          | Expr T_SEMICOLON
   33          | T_SEMICOLON
   34          | T_IF T_L_PAREN Expr T_R_PAREN Statement
   35          | T_IF T_L_PAREN Expr T_R_PAREN Statement T_ELSE Statement
   36          | T_WHILE T_L_PAREN Expr T_R_PAREN Statement
   37          | T_FOR T_L_PAREN ForInitStmt T_SEMICOLON ForCondExpr T_SEMICOLON ForStepExpr T_R_PAREN Statement
   38          | T_BREAK T_SEMICOLON
   39          | T_CONTINUE T_SEMICOLON

   40 ForInitStmt: VarDeclExpr
   41            | Expr
   42            | ε

   43 ForCondExpr: Expr
   44            | ε

   45 ForStepExpr: Expr
   46            | ε

   47 Expr: LOrExp
   48     | LVal T_ASSIGN Expr

   49 LOrExp: LOrExp T_OR_OR LAndExp
   50       | LAndExp

   51 LAndExp: LAndExp T_AND_AND EqExp
   52        | EqExp

   53 EqExp: EqExp T_EQUAL RelExp
   54      | EqExp T_NOT_EQUAL RelExp
   55      | RelExp

   56 RelExp: RelExp T_LESS AddExp
   57       | RelExp T_GREATER AddExp
   58       | RelExp T_LESS_EQUAL AddExp
   59       | RelExp T_GREATER_EQUAL AddExp
   60       | AddExp

   61 AddExp: AddExp T_ADD MulExp
   62       | AddExp T_SUB MulExp
   63       | MulExp

   64 MulExp: MulExp T_MUL UnaryExp
   65       | MulExp T_DIV UnaryExp
   66       | MulExp T_MOD UnaryExp
   67       | UnaryExp

   68 UnaryExp: PrimaryExp
   69         | T_ID T_L_PAREN T_R_PAREN
   70         | T_ID T_L_PAREN RealParamList T_R_PAREN
   71         | T_ADD UnaryExp
   72         | T_SUB UnaryExp
   73         | T_NOT UnaryExp
   74         | T_INC UnaryExp
   75         | T_DEC UnaryExp
   76         | UnaryExp T_INC
   77         | UnaryExp T_DEC

   78 PrimaryExp: T_L_PAREN Expr T_R_PAREN
   79           | T_DIGIT
   80           | LVal

   81 RealParamList: Expr
   82              | RealParamList T_COMMA Expr

   83 FormalParam: BasicType T_ID ArrayParamDims
   84            | BasicType T_ID

   85 ArrayParamDims: T_L_BRACKET T_R_BRACKET
   86               | T_L_BRACKET Expr T_R_BRACKET
   87               | ArrayParamDims T_L_BRACKET T_R_BRACKET
   88               | ArrayParamDims T_L_BRACKET Expr T_R_BRACKET

   89 FormalParamList: FormalParam
   90                | FormalParamList T_COMMA FormalParam

   91 LVal: T_ID ArrayIndices
   92     | T_ID

   93 ArrayIndices: T_L_BRACKET Expr T_R_BRACKET
   94             | ArrayIndices T_L_BRACKET Expr T_R_BRACKET


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    T_DIGIT <integer_num> (258) 79
    T_ID <var_id> (259) 5 6 16 17 18 19 69 70 83 84 91 92
    T_INT <type> (260) 26
    T_VOID <type> (261) 27
    T_L_BRACKET (262) 20 21 85 86 87 88 93 94
    T_R_BRACKET (263) 20 21 85 86 87 88 93 94
    T_RETURN (264) 28 29
    T_SEMICOLON (265) 13 28 29 30 32 33 37 38 39
    T_L_PAREN (266) 5 6 34 35 36 37 69 70 78
    T_R_PAREN (267) 5 6 34 35 36 37 69 70 78
    T_L_BRACE (268) 7 8 23
    T_R_BRACE (269) 7 8 23
    T_COMMA (270) 15 25 82 90
    T_ASSIGN (271) 16 18 30 48
    T_SUB (272) 62 72
    T_ADD (273) 61 71
    T_MUL (274) 64
    T_DIV (275) 65
    T_MOD (276) 66
    T_LESS (277) 56
    T_GREATER (278) 57
    T_LESS_EQUAL (279) 58
    T_GREATER_EQUAL (280) 59
    T_EQUAL (281) 53
    T_NOT_EQUAL (282) 54
    T_AND_AND (283) 51
    T_OR_OR (284) 49
    T_NOT (285) 73
    T_IF (286) 34 35
    T_ELSE (287) 35
    T_WHILE (288) 36
    T_FOR (289) 37
    T_BREAK (290) 38
    T_CONTINUE (291) 39
    T_INC (292) 74 76
    T_DEC (293) 75 77
    LOWER_THAN_ELSE (294)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    CompileUnit <node> (41)
        on left: 1 2 3 4
        on right: 0 3 4
    FuncDef <node> (42)
        on left: 5 6
        on right: 1 3
    Block <node> (43)
        on left: 7 8
        on right: 5 6 31
    BlockItemList <node> (44)
        on left: 9 10
        on right: 8 10
    BlockItem <node> (45)
        on left: 11 12
        on right: 9 10
    VarDecl <node> (46)
        on left: 13
        on right: 2 4 12
    VarDeclExpr <node> (47)
        on left: 14 15
        on right: 13 15 40
    VarDef <node> (48)
        on left: 16 17 18 19
        on right: 14 15
    ArrayDims <array_dims> (49)
        on left: 20 21
        on right: 18 19 21
    InitVal <node> (50)
        on left: 22 23
        on right: 18 24 25
    InitValList <node> (51)
        on left: 24 25
        on right: 23 25
    BasicType <type> (52)
        on left: 26 27
        on right: 5 6 14 83 84
    Statement <node> (53)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39
        on right: 11 34 35 36 37
    ForInitStmt <node> (54)
        on left: 40 41 42
        on right: 37
    ForCondExpr <node> (55)
        on left: 43 44
        on right: 37
    ForStepExpr <node> (56)
        on left: 45 46
        on right: 37
    Expr <node> (57)
        on left: 47 48
        on right: 16 20 21 22 28 30 32 34 35 36 41 43 45 48 78 81 82 86 88 93 94
    LOrExp <node> (58)
        on left: 49 50
        on right: 47 49
    LAndExp <node> (59)
        on left: 51 52
        on right: 49 50 51
    EqExp <node> (60)
        on left: 53 54 55
        on right: 51 52 53 54
    RelExp <node> (61)
        on left: 56 57 58 59 60
        on right: 53 54 55 56 57 58 59
    AddExp <node> (62)
        on left: 61 62 63
        on right: 56 57 58 59 60 61 62
    MulExp <node> (63)
        on left: 64 65 66 67
        on right: 61 62 63 64 65 66
    UnaryExp <node> (64)
        on left: 68 69 70 71 72 73 74 75 76 77
        on right: 64 65 66 67 71 72 73 74 75 76 77
    PrimaryExp <node> (65)
        on left: 78 79 80
        on right: 68
    RealParamList <node> (66)
        on left: 81 82
        on right: 70 82
    FormalParam <node> (67)
        on left: 83 84
        on right: 89 90
    ArrayParamDims <array_dims> (68)
        on left: 85 86 87 88
        on right: 83 87 88
    FormalParamList <node> (69)
        on left: 89 90
        on right: 6 90
    LVal <node> (70)
        on left: 91 92
        on right: 30 48 80
    ArrayIndices <array_indices> (71)
        on left: 93 94
        on right: 91 94


State 0

    0 $accept: • CompileUnit $end

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    CompileUnit  go to state 3
    FuncDef      go to state 4
    VarDecl      go to state 5
    VarDeclExpr  go to state 6
    BasicType    go to state 7


State 1

   26 BasicType: T_INT •

    $default  reduce using rule 26 (BasicType)


State 2

   27 BasicType: T_VOID •

    $default  reduce using rule 27 (BasicType)


State 3

    0 $accept: CompileUnit • $end
    3 CompileUnit: CompileUnit • FuncDef
    4            | CompileUnit • VarDecl

    $end    shift, and go to state 8
    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    FuncDef      go to state 9
    VarDecl      go to state 10
    VarDeclExpr  go to state 6
    BasicType    go to state 7


State 4

    1 CompileUnit: FuncDef •

    $default  reduce using rule 1 (CompileUnit)


State 5

    2 CompileUnit: VarDecl •

    $default  reduce using rule 2 (CompileUnit)


State 6

   13 VarDecl: VarDeclExpr • T_SEMICOLON
   15 VarDeclExpr: VarDeclExpr • T_COMMA VarDef

    T_SEMICOLON  shift, and go to state 11
    T_COMMA      shift, and go to state 12


State 7

    5 FuncDef: BasicType • T_ID T_L_PAREN T_R_PAREN Block
    6        | BasicType • T_ID T_L_PAREN FormalParamList T_R_PAREN Block
   14 VarDeclExpr: BasicType • VarDef

    T_ID  shift, and go to state 13

    VarDef  go to state 14


State 8

    0 $accept: CompileUnit $end •

    $default  accept


State 9

    3 CompileUnit: CompileUnit FuncDef •

    $default  reduce using rule 3 (CompileUnit)


State 10

    4 CompileUnit: CompileUnit VarDecl •

    $default  reduce using rule 4 (CompileUnit)


State 11

   13 VarDecl: VarDeclExpr T_SEMICOLON •

    $default  reduce using rule 13 (VarDecl)


State 12

   15 VarDeclExpr: VarDeclExpr T_COMMA • VarDef

    T_ID  shift, and go to state 15

    VarDef  go to state 16


State 13

    5 FuncDef: BasicType T_ID • T_L_PAREN T_R_PAREN Block
    6        | BasicType T_ID • T_L_PAREN FormalParamList T_R_PAREN Block
   16 VarDef: T_ID • T_ASSIGN Expr
   17       | T_ID •
   18       | T_ID • ArrayDims T_ASSIGN InitVal
   19       | T_ID • ArrayDims

    T_L_BRACKET  shift, and go to state 17
    T_L_PAREN    shift, and go to state 18
    T_ASSIGN     shift, and go to state 19

    $default  reduce using rule 17 (VarDef)

    ArrayDims  go to state 20


State 14

   14 VarDeclExpr: BasicType VarDef •

    $default  reduce using rule 14 (VarDeclExpr)


State 15

   16 VarDef: T_ID • T_ASSIGN Expr
   17       | T_ID •
   18       | T_ID • ArrayDims T_ASSIGN InitVal
   19       | T_ID • ArrayDims

    T_L_BRACKET  shift, and go to state 17
    T_ASSIGN     shift, and go to state 19

    $default  reduce using rule 17 (VarDef)

    ArrayDims  go to state 20


State 16

   15 VarDeclExpr: VarDeclExpr T_COMMA VarDef •

    $default  reduce using rule 15 (VarDeclExpr)


State 17

   20 ArrayDims: T_L_BRACKET • Expr T_R_BRACKET

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 29
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 18

    5 FuncDef: BasicType T_ID T_L_PAREN • T_R_PAREN Block
    6        | BasicType T_ID T_L_PAREN • FormalParamList T_R_PAREN Block

    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_R_PAREN  shift, and go to state 39

    BasicType        go to state 40
    FormalParam      go to state 41
    FormalParamList  go to state 42


State 19

   16 VarDef: T_ID T_ASSIGN • Expr

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 43
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 20

   18 VarDef: T_ID ArrayDims • T_ASSIGN InitVal
   19       | T_ID ArrayDims •
   21 ArrayDims: ArrayDims • T_L_BRACKET Expr T_R_BRACKET

    T_L_BRACKET  shift, and go to state 44
    T_ASSIGN     shift, and go to state 45

    $default  reduce using rule 19 (VarDef)


State 21

   79 PrimaryExp: T_DIGIT •

    $default  reduce using rule 79 (PrimaryExp)


State 22

   69 UnaryExp: T_ID • T_L_PAREN T_R_PAREN
   70         | T_ID • T_L_PAREN RealParamList T_R_PAREN
   91 LVal: T_ID • ArrayIndices
   92     | T_ID •

    T_L_BRACKET  shift, and go to state 46
    T_L_PAREN    shift, and go to state 47

    $default  reduce using rule 92 (LVal)

    ArrayIndices  go to state 48


State 23

   78 PrimaryExp: T_L_PAREN • Expr T_R_PAREN

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 49
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 24

   72 UnaryExp: T_SUB • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 50
    PrimaryExp  go to state 37
    LVal        go to state 51


State 25

   71 UnaryExp: T_ADD • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 52
    PrimaryExp  go to state 37
    LVal        go to state 51


State 26

   73 UnaryExp: T_NOT • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 53
    PrimaryExp  go to state 37
    LVal        go to state 51


State 27

   74 UnaryExp: T_INC • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 54
    PrimaryExp  go to state 37
    LVal        go to state 51


State 28

   75 UnaryExp: T_DEC • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 55
    PrimaryExp  go to state 37
    LVal        go to state 51


State 29

   20 ArrayDims: T_L_BRACKET Expr • T_R_BRACKET

    T_R_BRACKET  shift, and go to state 56


State 30

   47 Expr: LOrExp •
   49 LOrExp: LOrExp • T_OR_OR LAndExp

    T_OR_OR  shift, and go to state 57

    $default  reduce using rule 47 (Expr)


State 31

   50 LOrExp: LAndExp •
   51 LAndExp: LAndExp • T_AND_AND EqExp

    T_AND_AND  shift, and go to state 58

    $default  reduce using rule 50 (LOrExp)


State 32

   52 LAndExp: EqExp •
   53 EqExp: EqExp • T_EQUAL RelExp
   54      | EqExp • T_NOT_EQUAL RelExp

    T_EQUAL      shift, and go to state 59
    T_NOT_EQUAL  shift, and go to state 60

    $default  reduce using rule 52 (LAndExp)


State 33

   55 EqExp: RelExp •
   56 RelExp: RelExp • T_LESS AddExp
   57       | RelExp • T_GREATER AddExp
   58       | RelExp • T_LESS_EQUAL AddExp
   59       | RelExp • T_GREATER_EQUAL AddExp

    T_LESS           shift, and go to state 61
    T_GREATER        shift, and go to state 62
    T_LESS_EQUAL     shift, and go to state 63
    T_GREATER_EQUAL  shift, and go to state 64

    $default  reduce using rule 55 (EqExp)


State 34

   60 RelExp: AddExp •
   61 AddExp: AddExp • T_ADD MulExp
   62       | AddExp • T_SUB MulExp

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66

    $default  reduce using rule 60 (RelExp)


State 35

   63 AddExp: MulExp •
   64 MulExp: MulExp • T_MUL UnaryExp
   65       | MulExp • T_DIV UnaryExp
   66       | MulExp • T_MOD UnaryExp

    T_MUL  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MOD  shift, and go to state 69

    $default  reduce using rule 63 (AddExp)


State 36

   67 MulExp: UnaryExp •
   76 UnaryExp: UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    $default  reduce using rule 67 (MulExp)


State 37

   68 UnaryExp: PrimaryExp •

    $default  reduce using rule 68 (UnaryExp)


State 38

   48 Expr: LVal • T_ASSIGN Expr
   80 PrimaryExp: LVal •

    T_ASSIGN  shift, and go to state 72

    $default  reduce using rule 80 (PrimaryExp)


State 39

    5 FuncDef: BasicType T_ID T_L_PAREN T_R_PAREN • Block

    T_L_BRACE  shift, and go to state 73

    Block  go to state 74


State 40

   83 FormalParam: BasicType • T_ID ArrayParamDims
   84            | BasicType • T_ID

    T_ID  shift, and go to state 75


State 41

   89 FormalParamList: FormalParam •

    $default  reduce using rule 89 (FormalParamList)


State 42

    6 FuncDef: BasicType T_ID T_L_PAREN FormalParamList • T_R_PAREN Block
   90 FormalParamList: FormalParamList • T_COMMA FormalParam

    T_R_PAREN  shift, and go to state 76
    T_COMMA    shift, and go to state 77


State 43

   16 VarDef: T_ID T_ASSIGN Expr •

    $default  reduce using rule 16 (VarDef)


State 44

   21 ArrayDims: ArrayDims T_L_BRACKET • Expr T_R_BRACKET

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 78
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 45

   18 VarDef: T_ID ArrayDims T_ASSIGN • InitVal

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_L_BRACE  shift, and go to state 79
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    InitVal     go to state 80
    Expr        go to state 81
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 46

   93 ArrayIndices: T_L_BRACKET • Expr T_R_BRACKET

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 82
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 47

   69 UnaryExp: T_ID T_L_PAREN • T_R_PAREN
   70         | T_ID T_L_PAREN • RealParamList T_R_PAREN

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_R_PAREN  shift, and go to state 83
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr           go to state 84
    LOrExp         go to state 30
    LAndExp        go to state 31
    EqExp          go to state 32
    RelExp         go to state 33
    AddExp         go to state 34
    MulExp         go to state 35
    UnaryExp       go to state 36
    PrimaryExp     go to state 37
    RealParamList  go to state 85
    LVal           go to state 38


State 48

   91 LVal: T_ID ArrayIndices •
   94 ArrayIndices: ArrayIndices • T_L_BRACKET Expr T_R_BRACKET

    T_L_BRACKET  shift, and go to state 86

    $default  reduce using rule 91 (LVal)


State 49

   78 PrimaryExp: T_L_PAREN Expr • T_R_PAREN

    T_R_PAREN  shift, and go to state 87


State 50

   72 UnaryExp: T_SUB UnaryExp •
   76         | UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    T_INC     [reduce using rule 72 (UnaryExp)]
    T_DEC     [reduce using rule 72 (UnaryExp)]
    $default  reduce using rule 72 (UnaryExp)

    shift/reduce conflict on token T_INC:
       72 UnaryExp: T_SUB UnaryExp •
       76 UnaryExp: UnaryExp • T_INC
      Example: T_SUB UnaryExp • T_INC
      Shift derivation
        UnaryExp
        ↳ 72: T_SUB UnaryExp
                    ↳ 76: UnaryExp • T_INC
      Reduce derivation
        UnaryExp
        ↳ 76: UnaryExp               T_INC
              ↳ 72: T_SUB UnaryExp •

    shift/reduce conflict on token T_DEC:
       72 UnaryExp: T_SUB UnaryExp •
       77 UnaryExp: UnaryExp • T_DEC
      Example: T_SUB UnaryExp • T_DEC
      Shift derivation
        UnaryExp
        ↳ 72: T_SUB UnaryExp
                    ↳ 77: UnaryExp • T_DEC
      Reduce derivation
        UnaryExp
        ↳ 77: UnaryExp               T_DEC
              ↳ 72: T_SUB UnaryExp •



State 51

   80 PrimaryExp: LVal •

    $default  reduce using rule 80 (PrimaryExp)


State 52

   71 UnaryExp: T_ADD UnaryExp •
   76         | UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    T_INC     [reduce using rule 71 (UnaryExp)]
    T_DEC     [reduce using rule 71 (UnaryExp)]
    $default  reduce using rule 71 (UnaryExp)

    shift/reduce conflict on token T_INC:
       71 UnaryExp: T_ADD UnaryExp •
       76 UnaryExp: UnaryExp • T_INC
      Example: T_ADD UnaryExp • T_INC
      Shift derivation
        UnaryExp
        ↳ 71: T_ADD UnaryExp
                    ↳ 76: UnaryExp • T_INC
      Reduce derivation
        UnaryExp
        ↳ 76: UnaryExp               T_INC
              ↳ 71: T_ADD UnaryExp •

    shift/reduce conflict on token T_DEC:
       71 UnaryExp: T_ADD UnaryExp •
       77 UnaryExp: UnaryExp • T_DEC
      Example: T_ADD UnaryExp • T_DEC
      Shift derivation
        UnaryExp
        ↳ 71: T_ADD UnaryExp
                    ↳ 77: UnaryExp • T_DEC
      Reduce derivation
        UnaryExp
        ↳ 77: UnaryExp               T_DEC
              ↳ 71: T_ADD UnaryExp •



State 53

   73 UnaryExp: T_NOT UnaryExp •
   76         | UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    T_INC     [reduce using rule 73 (UnaryExp)]
    T_DEC     [reduce using rule 73 (UnaryExp)]
    $default  reduce using rule 73 (UnaryExp)

    shift/reduce conflict on token T_INC:
       73 UnaryExp: T_NOT UnaryExp •
       76 UnaryExp: UnaryExp • T_INC
      Example: T_NOT UnaryExp • T_INC
      Shift derivation
        UnaryExp
        ↳ 73: T_NOT UnaryExp
                    ↳ 76: UnaryExp • T_INC
      Reduce derivation
        UnaryExp
        ↳ 76: UnaryExp               T_INC
              ↳ 73: T_NOT UnaryExp •

    shift/reduce conflict on token T_DEC:
       73 UnaryExp: T_NOT UnaryExp •
       77 UnaryExp: UnaryExp • T_DEC
      Example: T_NOT UnaryExp • T_DEC
      Shift derivation
        UnaryExp
        ↳ 73: T_NOT UnaryExp
                    ↳ 77: UnaryExp • T_DEC
      Reduce derivation
        UnaryExp
        ↳ 77: UnaryExp               T_DEC
              ↳ 73: T_NOT UnaryExp •



State 54

   74 UnaryExp: T_INC UnaryExp •
   76         | UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    T_INC     [reduce using rule 74 (UnaryExp)]
    T_DEC     [reduce using rule 74 (UnaryExp)]
    $default  reduce using rule 74 (UnaryExp)

    shift/reduce conflict on token T_INC:
       74 UnaryExp: T_INC UnaryExp •
       76 UnaryExp: UnaryExp • T_INC
      Example: T_INC UnaryExp • T_INC
      Shift derivation
        UnaryExp
        ↳ 74: T_INC UnaryExp
                    ↳ 76: UnaryExp • T_INC
      Reduce derivation
        UnaryExp
        ↳ 76: UnaryExp               T_INC
              ↳ 74: T_INC UnaryExp •

    shift/reduce conflict on token T_DEC:
       74 UnaryExp: T_INC UnaryExp •
       77 UnaryExp: UnaryExp • T_DEC
      Example: T_INC UnaryExp • T_DEC
      Shift derivation
        UnaryExp
        ↳ 74: T_INC UnaryExp
                    ↳ 77: UnaryExp • T_DEC
      Reduce derivation
        UnaryExp
        ↳ 77: UnaryExp               T_DEC
              ↳ 74: T_INC UnaryExp •



State 55

   75 UnaryExp: T_DEC UnaryExp •
   76         | UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    T_INC     [reduce using rule 75 (UnaryExp)]
    T_DEC     [reduce using rule 75 (UnaryExp)]
    $default  reduce using rule 75 (UnaryExp)

    shift/reduce conflict on token T_INC:
       75 UnaryExp: T_DEC UnaryExp •
       76 UnaryExp: UnaryExp • T_INC
      Example: T_DEC UnaryExp • T_INC
      Shift derivation
        UnaryExp
        ↳ 75: T_DEC UnaryExp
                    ↳ 76: UnaryExp • T_INC
      Reduce derivation
        UnaryExp
        ↳ 76: UnaryExp               T_INC
              ↳ 75: T_DEC UnaryExp •

    shift/reduce conflict on token T_DEC:
       75 UnaryExp: T_DEC UnaryExp •
       77 UnaryExp: UnaryExp • T_DEC
      Example: T_DEC UnaryExp • T_DEC
      Shift derivation
        UnaryExp
        ↳ 75: T_DEC UnaryExp
                    ↳ 77: UnaryExp • T_DEC
      Reduce derivation
        UnaryExp
        ↳ 77: UnaryExp               T_DEC
              ↳ 75: T_DEC UnaryExp •



State 56

   20 ArrayDims: T_L_BRACKET Expr T_R_BRACKET •

    $default  reduce using rule 20 (ArrayDims)


State 57

   49 LOrExp: LOrExp T_OR_OR • LAndExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    LAndExp     go to state 88
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 58

   51 LAndExp: LAndExp T_AND_AND • EqExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    EqExp       go to state 89
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 59

   53 EqExp: EqExp T_EQUAL • RelExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    RelExp      go to state 90
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 60

   54 EqExp: EqExp T_NOT_EQUAL • RelExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    RelExp      go to state 91
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 61

   56 RelExp: RelExp T_LESS • AddExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    AddExp      go to state 92
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 62

   57 RelExp: RelExp T_GREATER • AddExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    AddExp      go to state 93
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 63

   58 RelExp: RelExp T_LESS_EQUAL • AddExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    AddExp      go to state 94
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 64

   59 RelExp: RelExp T_GREATER_EQUAL • AddExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    AddExp      go to state 95
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 65

   62 AddExp: AddExp T_SUB • MulExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    MulExp      go to state 96
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 66

   61 AddExp: AddExp T_ADD • MulExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    MulExp      go to state 97
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 51


State 67

   64 MulExp: MulExp T_MUL • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 98
    PrimaryExp  go to state 37
    LVal        go to state 51


State 68

   65 MulExp: MulExp T_DIV • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 99
    PrimaryExp  go to state 37
    LVal        go to state 51


State 69

   66 MulExp: MulExp T_MOD • UnaryExp

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    UnaryExp    go to state 100
    PrimaryExp  go to state 37
    LVal        go to state 51


State 70

   76 UnaryExp: UnaryExp T_INC •

    $default  reduce using rule 76 (UnaryExp)


State 71

   77 UnaryExp: UnaryExp T_DEC •

    $default  reduce using rule 77 (UnaryExp)


State 72

   48 Expr: LVal T_ASSIGN • Expr

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 101
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 73

    7 Block: T_L_BRACE • T_R_BRACE
    8      | T_L_BRACE • BlockItemList T_R_BRACE

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_INT        shift, and go to state 1
    T_VOID       shift, and go to state 2
    T_RETURN     shift, and go to state 102
    T_SEMICOLON  shift, and go to state 103
    T_L_PAREN    shift, and go to state 23
    T_L_BRACE    shift, and go to state 73
    T_R_BRACE    shift, and go to state 104
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_IF         shift, and go to state 105
    T_WHILE      shift, and go to state 106
    T_FOR        shift, and go to state 107
    T_BREAK      shift, and go to state 108
    T_CONTINUE   shift, and go to state 109
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Block          go to state 110
    BlockItemList  go to state 111
    BlockItem      go to state 112
    VarDecl        go to state 113
    VarDeclExpr    go to state 6
    BasicType      go to state 114
    Statement      go to state 115
    Expr           go to state 116
    LOrExp         go to state 30
    LAndExp        go to state 31
    EqExp          go to state 32
    RelExp         go to state 33
    AddExp         go to state 34
    MulExp         go to state 35
    UnaryExp       go to state 36
    PrimaryExp     go to state 37
    LVal           go to state 117


State 74

    5 FuncDef: BasicType T_ID T_L_PAREN T_R_PAREN Block •

    $default  reduce using rule 5 (FuncDef)


State 75

   83 FormalParam: BasicType T_ID • ArrayParamDims
   84            | BasicType T_ID •

    T_L_BRACKET  shift, and go to state 118

    $default  reduce using rule 84 (FormalParam)

    ArrayParamDims  go to state 119


State 76

    6 FuncDef: BasicType T_ID T_L_PAREN FormalParamList T_R_PAREN • Block

    T_L_BRACE  shift, and go to state 73

    Block  go to state 120


State 77

   90 FormalParamList: FormalParamList T_COMMA • FormalParam

    T_INT   shift, and go to state 1
    T_VOID  shift, and go to state 2

    BasicType    go to state 40
    FormalParam  go to state 121


State 78

   21 ArrayDims: ArrayDims T_L_BRACKET Expr • T_R_BRACKET

    T_R_BRACKET  shift, and go to state 122


State 79

   23 InitVal: T_L_BRACE • InitValList T_R_BRACE

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_L_BRACE  shift, and go to state 79
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    InitVal      go to state 123
    InitValList  go to state 124
    Expr         go to state 81
    LOrExp       go to state 30
    LAndExp      go to state 31
    EqExp        go to state 32
    RelExp       go to state 33
    AddExp       go to state 34
    MulExp       go to state 35
    UnaryExp     go to state 36
    PrimaryExp   go to state 37
    LVal         go to state 38


State 80

   18 VarDef: T_ID ArrayDims T_ASSIGN InitVal •

    $default  reduce using rule 18 (VarDef)


State 81

   22 InitVal: Expr •

    $default  reduce using rule 22 (InitVal)


State 82

   93 ArrayIndices: T_L_BRACKET Expr • T_R_BRACKET

    T_R_BRACKET  shift, and go to state 125


State 83

   69 UnaryExp: T_ID T_L_PAREN T_R_PAREN •

    $default  reduce using rule 69 (UnaryExp)


State 84

   81 RealParamList: Expr •

    $default  reduce using rule 81 (RealParamList)


State 85

   70 UnaryExp: T_ID T_L_PAREN RealParamList • T_R_PAREN
   82 RealParamList: RealParamList • T_COMMA Expr

    T_R_PAREN  shift, and go to state 126
    T_COMMA    shift, and go to state 127


State 86

   94 ArrayIndices: ArrayIndices T_L_BRACKET • Expr T_R_BRACKET

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 128
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 87

   78 PrimaryExp: T_L_PAREN Expr T_R_PAREN •

    $default  reduce using rule 78 (PrimaryExp)


State 88

   49 LOrExp: LOrExp T_OR_OR LAndExp •
   51 LAndExp: LAndExp • T_AND_AND EqExp

    T_AND_AND  shift, and go to state 58

    $default  reduce using rule 49 (LOrExp)


State 89

   51 LAndExp: LAndExp T_AND_AND EqExp •
   53 EqExp: EqExp • T_EQUAL RelExp
   54      | EqExp • T_NOT_EQUAL RelExp

    T_EQUAL      shift, and go to state 59
    T_NOT_EQUAL  shift, and go to state 60

    $default  reduce using rule 51 (LAndExp)


State 90

   53 EqExp: EqExp T_EQUAL RelExp •
   56 RelExp: RelExp • T_LESS AddExp
   57       | RelExp • T_GREATER AddExp
   58       | RelExp • T_LESS_EQUAL AddExp
   59       | RelExp • T_GREATER_EQUAL AddExp

    T_LESS           shift, and go to state 61
    T_GREATER        shift, and go to state 62
    T_LESS_EQUAL     shift, and go to state 63
    T_GREATER_EQUAL  shift, and go to state 64

    $default  reduce using rule 53 (EqExp)


State 91

   54 EqExp: EqExp T_NOT_EQUAL RelExp •
   56 RelExp: RelExp • T_LESS AddExp
   57       | RelExp • T_GREATER AddExp
   58       | RelExp • T_LESS_EQUAL AddExp
   59       | RelExp • T_GREATER_EQUAL AddExp

    T_LESS           shift, and go to state 61
    T_GREATER        shift, and go to state 62
    T_LESS_EQUAL     shift, and go to state 63
    T_GREATER_EQUAL  shift, and go to state 64

    $default  reduce using rule 54 (EqExp)


State 92

   56 RelExp: RelExp T_LESS AddExp •
   61 AddExp: AddExp • T_ADD MulExp
   62       | AddExp • T_SUB MulExp

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66

    $default  reduce using rule 56 (RelExp)


State 93

   57 RelExp: RelExp T_GREATER AddExp •
   61 AddExp: AddExp • T_ADD MulExp
   62       | AddExp • T_SUB MulExp

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66

    $default  reduce using rule 57 (RelExp)


State 94

   58 RelExp: RelExp T_LESS_EQUAL AddExp •
   61 AddExp: AddExp • T_ADD MulExp
   62       | AddExp • T_SUB MulExp

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66

    $default  reduce using rule 58 (RelExp)


State 95

   59 RelExp: RelExp T_GREATER_EQUAL AddExp •
   61 AddExp: AddExp • T_ADD MulExp
   62       | AddExp • T_SUB MulExp

    T_SUB  shift, and go to state 65
    T_ADD  shift, and go to state 66

    $default  reduce using rule 59 (RelExp)


State 96

   62 AddExp: AddExp T_SUB MulExp •
   64 MulExp: MulExp • T_MUL UnaryExp
   65       | MulExp • T_DIV UnaryExp
   66       | MulExp • T_MOD UnaryExp

    T_MUL  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MOD  shift, and go to state 69

    $default  reduce using rule 62 (AddExp)


State 97

   61 AddExp: AddExp T_ADD MulExp •
   64 MulExp: MulExp • T_MUL UnaryExp
   65       | MulExp • T_DIV UnaryExp
   66       | MulExp • T_MOD UnaryExp

    T_MUL  shift, and go to state 67
    T_DIV  shift, and go to state 68
    T_MOD  shift, and go to state 69

    $default  reduce using rule 61 (AddExp)


State 98

   64 MulExp: MulExp T_MUL UnaryExp •
   76 UnaryExp: UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    $default  reduce using rule 64 (MulExp)


State 99

   65 MulExp: MulExp T_DIV UnaryExp •
   76 UnaryExp: UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    $default  reduce using rule 65 (MulExp)


State 100

   66 MulExp: MulExp T_MOD UnaryExp •
   76 UnaryExp: UnaryExp • T_INC
   77         | UnaryExp • T_DEC

    T_INC  shift, and go to state 70
    T_DEC  shift, and go to state 71

    $default  reduce using rule 66 (MulExp)


State 101

   48 Expr: LVal T_ASSIGN Expr •

    $default  reduce using rule 48 (Expr)


State 102

   28 Statement: T_RETURN • Expr T_SEMICOLON
   29          | T_RETURN • T_SEMICOLON

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_SEMICOLON  shift, and go to state 129
    T_L_PAREN    shift, and go to state 23
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Expr        go to state 130
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 103

   33 Statement: T_SEMICOLON •

    $default  reduce using rule 33 (Statement)


State 104

    7 Block: T_L_BRACE T_R_BRACE •

    $default  reduce using rule 7 (Block)


State 105

   34 Statement: T_IF • T_L_PAREN Expr T_R_PAREN Statement
   35          | T_IF • T_L_PAREN Expr T_R_PAREN Statement T_ELSE Statement

    T_L_PAREN  shift, and go to state 131


State 106

   36 Statement: T_WHILE • T_L_PAREN Expr T_R_PAREN Statement

    T_L_PAREN  shift, and go to state 132


State 107

   37 Statement: T_FOR • T_L_PAREN ForInitStmt T_SEMICOLON ForCondExpr T_SEMICOLON ForStepExpr T_R_PAREN Statement

    T_L_PAREN  shift, and go to state 133


State 108

   38 Statement: T_BREAK • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 134


State 109

   39 Statement: T_CONTINUE • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 135


State 110

   31 Statement: Block •

    $default  reduce using rule 31 (Statement)


State 111

    8 Block: T_L_BRACE BlockItemList • T_R_BRACE
   10 BlockItemList: BlockItemList • BlockItem

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_INT        shift, and go to state 1
    T_VOID       shift, and go to state 2
    T_RETURN     shift, and go to state 102
    T_SEMICOLON  shift, and go to state 103
    T_L_PAREN    shift, and go to state 23
    T_L_BRACE    shift, and go to state 73
    T_R_BRACE    shift, and go to state 136
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_IF         shift, and go to state 105
    T_WHILE      shift, and go to state 106
    T_FOR        shift, and go to state 107
    T_BREAK      shift, and go to state 108
    T_CONTINUE   shift, and go to state 109
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Block        go to state 110
    BlockItem    go to state 137
    VarDecl      go to state 113
    VarDeclExpr  go to state 6
    BasicType    go to state 114
    Statement    go to state 115
    Expr         go to state 116
    LOrExp       go to state 30
    LAndExp      go to state 31
    EqExp        go to state 32
    RelExp       go to state 33
    AddExp       go to state 34
    MulExp       go to state 35
    UnaryExp     go to state 36
    PrimaryExp   go to state 37
    LVal         go to state 117


State 112

    9 BlockItemList: BlockItem •

    $default  reduce using rule 9 (BlockItemList)


State 113

   12 BlockItem: VarDecl •

    $default  reduce using rule 12 (BlockItem)


State 114

   14 VarDeclExpr: BasicType • VarDef

    T_ID  shift, and go to state 15

    VarDef  go to state 14


State 115

   11 BlockItem: Statement •

    $default  reduce using rule 11 (BlockItem)


State 116

   32 Statement: Expr • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 138


State 117

   30 Statement: LVal • T_ASSIGN Expr T_SEMICOLON
   48 Expr: LVal • T_ASSIGN Expr
   80 PrimaryExp: LVal •

    T_ASSIGN  shift, and go to state 139

    $default  reduce using rule 80 (PrimaryExp)


State 118

   85 ArrayParamDims: T_L_BRACKET • T_R_BRACKET
   86               | T_L_BRACKET • Expr T_R_BRACKET

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_R_BRACKET  shift, and go to state 140
    T_L_PAREN    shift, and go to state 23
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Expr        go to state 141
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 119

   83 FormalParam: BasicType T_ID ArrayParamDims •
   87 ArrayParamDims: ArrayParamDims • T_L_BRACKET T_R_BRACKET
   88               | ArrayParamDims • T_L_BRACKET Expr T_R_BRACKET

    T_L_BRACKET  shift, and go to state 142

    $default  reduce using rule 83 (FormalParam)


State 120

    6 FuncDef: BasicType T_ID T_L_PAREN FormalParamList T_R_PAREN Block •

    $default  reduce using rule 6 (FuncDef)


State 121

   90 FormalParamList: FormalParamList T_COMMA FormalParam •

    $default  reduce using rule 90 (FormalParamList)


State 122

   21 ArrayDims: ArrayDims T_L_BRACKET Expr T_R_BRACKET •

    $default  reduce using rule 21 (ArrayDims)


State 123

   24 InitValList: InitVal •

    $default  reduce using rule 24 (InitValList)


State 124

   23 InitVal: T_L_BRACE InitValList • T_R_BRACE
   25 InitValList: InitValList • T_COMMA InitVal

    T_R_BRACE  shift, and go to state 143
    T_COMMA    shift, and go to state 144


State 125

   93 ArrayIndices: T_L_BRACKET Expr T_R_BRACKET •

    $default  reduce using rule 93 (ArrayIndices)


State 126

   70 UnaryExp: T_ID T_L_PAREN RealParamList T_R_PAREN •

    $default  reduce using rule 70 (UnaryExp)


State 127

   82 RealParamList: RealParamList T_COMMA • Expr

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 145
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 128

   94 ArrayIndices: ArrayIndices T_L_BRACKET Expr • T_R_BRACKET

    T_R_BRACKET  shift, and go to state 146


State 129

   29 Statement: T_RETURN T_SEMICOLON •

    $default  reduce using rule 29 (Statement)


State 130

   28 Statement: T_RETURN Expr • T_SEMICOLON

    T_SEMICOLON  shift, and go to state 147


State 131

   34 Statement: T_IF T_L_PAREN • Expr T_R_PAREN Statement
   35          | T_IF T_L_PAREN • Expr T_R_PAREN Statement T_ELSE Statement

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 148
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 132

   36 Statement: T_WHILE T_L_PAREN • Expr T_R_PAREN Statement

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 149
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 133

   37 Statement: T_FOR T_L_PAREN • ForInitStmt T_SEMICOLON ForCondExpr T_SEMICOLON ForStepExpr T_R_PAREN Statement

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_INT      shift, and go to state 1
    T_VOID     shift, and go to state 2
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    $default  reduce using rule 42 (ForInitStmt)

    VarDeclExpr  go to state 150
    BasicType    go to state 114
    ForInitStmt  go to state 151
    Expr         go to state 152
    LOrExp       go to state 30
    LAndExp      go to state 31
    EqExp        go to state 32
    RelExp       go to state 33
    AddExp       go to state 34
    MulExp       go to state 35
    UnaryExp     go to state 36
    PrimaryExp   go to state 37
    LVal         go to state 38


State 134

   38 Statement: T_BREAK T_SEMICOLON •

    $default  reduce using rule 38 (Statement)


State 135

   39 Statement: T_CONTINUE T_SEMICOLON •

    $default  reduce using rule 39 (Statement)


State 136

    8 Block: T_L_BRACE BlockItemList T_R_BRACE •

    $default  reduce using rule 8 (Block)


State 137

   10 BlockItemList: BlockItemList BlockItem •

    $default  reduce using rule 10 (BlockItemList)


State 138

   32 Statement: Expr T_SEMICOLON •

    $default  reduce using rule 32 (Statement)


State 139

   30 Statement: LVal T_ASSIGN • Expr T_SEMICOLON
   48 Expr: LVal T_ASSIGN • Expr

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    Expr        go to state 153
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 140

   85 ArrayParamDims: T_L_BRACKET T_R_BRACKET •

    $default  reduce using rule 85 (ArrayParamDims)


State 141

   86 ArrayParamDims: T_L_BRACKET Expr • T_R_BRACKET

    T_R_BRACKET  shift, and go to state 154


State 142

   87 ArrayParamDims: ArrayParamDims T_L_BRACKET • T_R_BRACKET
   88               | ArrayParamDims T_L_BRACKET • Expr T_R_BRACKET

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_R_BRACKET  shift, and go to state 155
    T_L_PAREN    shift, and go to state 23
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Expr        go to state 156
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 143

   23 InitVal: T_L_BRACE InitValList T_R_BRACE •

    $default  reduce using rule 23 (InitVal)


State 144

   25 InitValList: InitValList T_COMMA • InitVal

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_L_BRACE  shift, and go to state 79
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    InitVal     go to state 157
    Expr        go to state 81
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 38


State 145

   82 RealParamList: RealParamList T_COMMA Expr •

    $default  reduce using rule 82 (RealParamList)


State 146

   94 ArrayIndices: ArrayIndices T_L_BRACKET Expr T_R_BRACKET •

    $default  reduce using rule 94 (ArrayIndices)


State 147

   28 Statement: T_RETURN Expr T_SEMICOLON •

    $default  reduce using rule 28 (Statement)


State 148

   34 Statement: T_IF T_L_PAREN Expr • T_R_PAREN Statement
   35          | T_IF T_L_PAREN Expr • T_R_PAREN Statement T_ELSE Statement

    T_R_PAREN  shift, and go to state 158


State 149

   36 Statement: T_WHILE T_L_PAREN Expr • T_R_PAREN Statement

    T_R_PAREN  shift, and go to state 159


State 150

   15 VarDeclExpr: VarDeclExpr • T_COMMA VarDef
   40 ForInitStmt: VarDeclExpr •

    T_COMMA  shift, and go to state 12

    $default  reduce using rule 40 (ForInitStmt)


State 151

   37 Statement: T_FOR T_L_PAREN ForInitStmt • T_SEMICOLON ForCondExpr T_SEMICOLON ForStepExpr T_R_PAREN Statement

    T_SEMICOLON  shift, and go to state 160


State 152

   41 ForInitStmt: Expr •

    $default  reduce using rule 41 (ForInitStmt)


State 153

   30 Statement: LVal T_ASSIGN Expr • T_SEMICOLON
   48 Expr: LVal T_ASSIGN Expr •

    T_SEMICOLON  shift, and go to state 161

    T_SEMICOLON  [reduce using rule 48 (Expr)]

    shift/reduce conflict on token T_SEMICOLON:
       48 Expr: LVal T_ASSIGN Expr •
       30 Statement: LVal T_ASSIGN Expr • T_SEMICOLON
      Example: LVal T_ASSIGN Expr • T_SEMICOLON
      Shift derivation
        Statement
        ↳ 30: LVal T_ASSIGN Expr • T_SEMICOLON
      Reduce derivation
        Statement
        ↳ 32: Expr                       T_SEMICOLON
              ↳ 48: LVal T_ASSIGN Expr •



State 154

   86 ArrayParamDims: T_L_BRACKET Expr T_R_BRACKET •

    $default  reduce using rule 86 (ArrayParamDims)


State 155

   87 ArrayParamDims: ArrayParamDims T_L_BRACKET T_R_BRACKET •

    $default  reduce using rule 87 (ArrayParamDims)


State 156

   88 ArrayParamDims: ArrayParamDims T_L_BRACKET Expr • T_R_BRACKET

    T_R_BRACKET  shift, and go to state 162


State 157

   25 InitValList: InitValList T_COMMA InitVal •

    $default  reduce using rule 25 (InitValList)


State 158

   34 Statement: T_IF T_L_PAREN Expr T_R_PAREN • Statement
   35          | T_IF T_L_PAREN Expr T_R_PAREN • Statement T_ELSE Statement

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_RETURN     shift, and go to state 102
    T_SEMICOLON  shift, and go to state 103
    T_L_PAREN    shift, and go to state 23
    T_L_BRACE    shift, and go to state 73
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_IF         shift, and go to state 105
    T_WHILE      shift, and go to state 106
    T_FOR        shift, and go to state 107
    T_BREAK      shift, and go to state 108
    T_CONTINUE   shift, and go to state 109
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Block       go to state 110
    Statement   go to state 163
    Expr        go to state 116
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 117


State 159

   36 Statement: T_WHILE T_L_PAREN Expr T_R_PAREN • Statement

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_RETURN     shift, and go to state 102
    T_SEMICOLON  shift, and go to state 103
    T_L_PAREN    shift, and go to state 23
    T_L_BRACE    shift, and go to state 73
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_IF         shift, and go to state 105
    T_WHILE      shift, and go to state 106
    T_FOR        shift, and go to state 107
    T_BREAK      shift, and go to state 108
    T_CONTINUE   shift, and go to state 109
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Block       go to state 110
    Statement   go to state 164
    Expr        go to state 116
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 117


State 160

   37 Statement: T_FOR T_L_PAREN ForInitStmt T_SEMICOLON • ForCondExpr T_SEMICOLON ForStepExpr T_R_PAREN Statement

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    $default  reduce using rule 44 (ForCondExpr)

    ForCondExpr  go to state 165
    Expr         go to state 166
    LOrExp       go to state 30
    LAndExp      go to state 31
    EqExp        go to state 32
    RelExp       go to state 33
    AddExp       go to state 34
    MulExp       go to state 35
    UnaryExp     go to state 36
    PrimaryExp   go to state 37
    LVal         go to state 38


State 161

   30 Statement: LVal T_ASSIGN Expr T_SEMICOLON •

    $default  reduce using rule 30 (Statement)


State 162

   88 ArrayParamDims: ArrayParamDims T_L_BRACKET Expr T_R_BRACKET •

    $default  reduce using rule 88 (ArrayParamDims)


State 163

   34 Statement: T_IF T_L_PAREN Expr T_R_PAREN Statement •
   35          | T_IF T_L_PAREN Expr T_R_PAREN Statement • T_ELSE Statement

    T_ELSE  shift, and go to state 167

    $default  reduce using rule 34 (Statement)


State 164

   36 Statement: T_WHILE T_L_PAREN Expr T_R_PAREN Statement •

    $default  reduce using rule 36 (Statement)


State 165

   37 Statement: T_FOR T_L_PAREN ForInitStmt T_SEMICOLON ForCondExpr • T_SEMICOLON ForStepExpr T_R_PAREN Statement

    T_SEMICOLON  shift, and go to state 168


State 166

   43 ForCondExpr: Expr •

    $default  reduce using rule 43 (ForCondExpr)


State 167

   35 Statement: T_IF T_L_PAREN Expr T_R_PAREN Statement T_ELSE • Statement

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_RETURN     shift, and go to state 102
    T_SEMICOLON  shift, and go to state 103
    T_L_PAREN    shift, and go to state 23
    T_L_BRACE    shift, and go to state 73
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_IF         shift, and go to state 105
    T_WHILE      shift, and go to state 106
    T_FOR        shift, and go to state 107
    T_BREAK      shift, and go to state 108
    T_CONTINUE   shift, and go to state 109
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Block       go to state 110
    Statement   go to state 169
    Expr        go to state 116
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 117


State 168

   37 Statement: T_FOR T_L_PAREN ForInitStmt T_SEMICOLON ForCondExpr T_SEMICOLON • ForStepExpr T_R_PAREN Statement

    T_DIGIT    shift, and go to state 21
    T_ID       shift, and go to state 22
    T_L_PAREN  shift, and go to state 23
    T_SUB      shift, and go to state 24
    T_ADD      shift, and go to state 25
    T_NOT      shift, and go to state 26
    T_INC      shift, and go to state 27
    T_DEC      shift, and go to state 28

    $default  reduce using rule 46 (ForStepExpr)

    ForStepExpr  go to state 170
    Expr         go to state 171
    LOrExp       go to state 30
    LAndExp      go to state 31
    EqExp        go to state 32
    RelExp       go to state 33
    AddExp       go to state 34
    MulExp       go to state 35
    UnaryExp     go to state 36
    PrimaryExp   go to state 37
    LVal         go to state 38


State 169

   35 Statement: T_IF T_L_PAREN Expr T_R_PAREN Statement T_ELSE Statement •

    $default  reduce using rule 35 (Statement)


State 170

   37 Statement: T_FOR T_L_PAREN ForInitStmt T_SEMICOLON ForCondExpr T_SEMICOLON ForStepExpr • T_R_PAREN Statement

    T_R_PAREN  shift, and go to state 172


State 171

   45 ForStepExpr: Expr •

    $default  reduce using rule 45 (ForStepExpr)


State 172

   37 Statement: T_FOR T_L_PAREN ForInitStmt T_SEMICOLON ForCondExpr T_SEMICOLON ForStepExpr T_R_PAREN • Statement

    T_DIGIT      shift, and go to state 21
    T_ID         shift, and go to state 22
    T_RETURN     shift, and go to state 102
    T_SEMICOLON  shift, and go to state 103
    T_L_PAREN    shift, and go to state 23
    T_L_BRACE    shift, and go to state 73
    T_SUB        shift, and go to state 24
    T_ADD        shift, and go to state 25
    T_NOT        shift, and go to state 26
    T_IF         shift, and go to state 105
    T_WHILE      shift, and go to state 106
    T_FOR        shift, and go to state 107
    T_BREAK      shift, and go to state 108
    T_CONTINUE   shift, and go to state 109
    T_INC        shift, and go to state 27
    T_DEC        shift, and go to state 28

    Block       go to state 110
    Statement   go to state 173
    Expr        go to state 116
    LOrExp      go to state 30
    LAndExp     go to state 31
    EqExp       go to state 32
    RelExp      go to state 33
    AddExp      go to state 34
    MulExp      go to state 35
    UnaryExp    go to state 36
    PrimaryExp  go to state 37
    LVal        go to state 117


State 173

   37 Statement: T_FOR T_L_PAREN ForInitStmt T_SEMICOLON ForCondExpr T_SEMICOLON ForStepExpr T_R_PAREN Statement •

    $default  reduce using rule 37 (Statement)
